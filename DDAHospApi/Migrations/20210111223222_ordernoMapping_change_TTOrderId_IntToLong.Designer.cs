// <auto-generated />
using System;
using DDAApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDAApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210111223222_ordernoMapping_change_TTOrderId_IntToLong")]
    partial class ordernoMapping_change_TTOrderId_IntToLong
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDAApi.HospModel.Category", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Enable");

                    b.Property<string>("Name1")
                        .HasColumnName("Category");

                    b.Property<string>("Name2")
                        .HasColumnName("Category1");

                    b.Property<string>("Name3")
                        .HasColumnName("Category2");

                    b.Property<string>("Name4")
                        .HasColumnName("Category3");

                    b.Property<bool>("ShowOnMainMenu");

                    b.Property<bool>("ShowOnPOSMenu");

                    b.Property<bool>("ShowOnPhoneOrderMenu");

                    b.HasKey("Code");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DDAApi.HospModel.DDAVersion", b =>
                {
                    b.Property<double>("Version");

                    b.HasKey("Version");

                    b.ToTable("Version");
                });

            modelBuilder.Entity("DDAApi.HospModel.HospOrderHead", b =>
                {
                    b.Property<string>("OrderNo")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<bool>("AwardEffective");

                    b.Property<int>("BillKind");

                    b.Property<string>("BookingNo");

                    b.Property<bool>("Credit");

                    b.Property<double>("CurrentGSTRate");

                    b.Property<double>("CurrentPoints");

                    b.Property<string>("CustomerAddress");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerTelephone");

                    b.Property<bool>("Delivery");

                    b.Property<int>("DiscountKind");

                    b.Property<string>("DiscountOperator");

                    b.Property<double>("DollarDiscount");

                    b.Property<DateTime?>("DueTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("GST");

                    b.Property<string>("InvoiceNo");

                    b.Property<string>("MachineID");

                    b.Property<string>("MemberID");

                    b.Property<string>("OpName");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPrinted");

                    b.Property<double>("OtherCharge");

                    b.Property<double>("OtherChargeRate");

                    b.Property<double>("PaidAmount");

                    b.Property<int>("Persons");

                    b.Property<bool?>("PointsUploaded");

                    b.Property<string>("PresetDiscountCode");

                    b.Property<bool>("PriceIncludesGST");

                    b.Property<double>("RedeemPoints");

                    b.Property<string>("SelfOrderMenuGroup");

                    b.Property<double>("ServiceCharge");

                    b.Property<double>("ServiceChargeRate");

                    b.Property<string>("ServicePerson");

                    b.Property<bool>("SplitBill");

                    b.Property<double>("Surcharge");

                    b.Property<string>("TableNo");

                    b.Property<double>("Tips");

                    b.Property<double>("TotalRedeemPoints");

                    b.Property<int>("VIPNo");

                    b.Property<double>("VoucherAmount");

                    b.Property<double>("VoucherDiscount");

                    b.Property<string>("VoucherID");

                    b.HasKey("OrderNo");

                    b.ToTable("OrderH");
                });

            modelBuilder.Entity("DDAApi.HospModel.HospOrderItem", b =>
                {
                    b.Property<string>("OrderNo");

                    b.Property<short>("IDNo");

                    b.Property<string>("ItemCode");

                    b.Property<bool>("CheckListPrinted");

                    b.Property<short>("Condition");

                    b.Property<double>("Discount");

                    b.Property<bool>("ManuallyEnterWeight");

                    b.Property<string>("OrderOperator");

                    b.Property<double>("OriginalPrice");

                    b.Property<double>("OriginalQty");

                    b.Property<double>("PaidQty");

                    b.Property<string>("PresetDiscountCode");

                    b.Property<double>("Price");

                    b.Property<short>("PriceSelect");

                    b.Property<bool>("PrintFlag");

                    b.Property<double>("Qty");

                    b.Property<bool>("RedeemItem");

                    b.Property<short>("Seat");

                    b.Property<bool>("SentToKitchen");

                    b.Property<string>("SpecialOrder");

                    b.Property<double>("TaxRate");

                    b.Property<bool>("VoidFlag");

                    b.Property<string>("VoidReason");

                    b.HasKey("OrderNo", "IDNo", "ItemCode");

                    b.ToTable("OrderI");
                });

            modelBuilder.Entity("DDAApi.HospModel.HospRecvAcct", b =>
                {
                    b.Property<string>("OrderNo");

                    b.Property<int>("IDNo");

                    b.Property<DateTime?>("AccountDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepositID");

                    b.Property<double>("GiftCardBalance");

                    b.Property<DateTime?>("GiftCardExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineID");

                    b.Property<string>("Notes");

                    b.Property<string>("OpName");

                    b.Property<double>("PaidAmount");

                    b.Property<string>("Payby");

                    b.Property<bool>("Transfer");

                    b.HasKey("OrderNo", "IDNo");

                    b.ToTable("RecvAcct");
                });

            modelBuilder.Entity("DDAApi.HospModel.MenuItem", b =>
                {
                    b.Property<string>("ItemCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Description1");

                    b.Property<string>("Description2");

                    b.Property<string>("Description3");

                    b.Property<string>("Description4");

                    b.Property<double>("HappyHourPrice1");

                    b.Property<double>("HappyHourPrice2");

                    b.Property<double>("HappyHourPrice3");

                    b.Property<double>("HappyHourPrice4");

                    b.Property<bool>("Instruction");

                    b.Property<int>("MainPosition");

                    b.Property<bool>("OnlyShowOnSubMenu");

                    b.Property<string>("PicturePath");

                    b.Property<double>("Price1")
                        .HasColumnName("Price");

                    b.Property<double>("Price2")
                        .HasColumnName("Price1");

                    b.Property<double>("Price3")
                        .HasColumnName("Price2");

                    b.Property<double>("Price4")
                        .HasColumnName("Price3");

                    b.Property<string>("SubDescription1")
                        .HasColumnName("SubDescription");

                    b.Property<string>("SubDescription2")
                        .HasColumnName("SubDescription1");

                    b.Property<string>("SubDescription3")
                        .HasColumnName("SubDescription2");

                    b.Property<string>("SubDescription4")
                        .HasColumnName("SubDescription3");

                    b.Property<double>("TaxRate");

                    b.HasKey("ItemCode");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("DDAApi.HospModel.TT_ApiSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HttpBaseUrl");

                    b.Property<int>("OnlineOrderStartYear");

                    b.HasKey("Id");

                    b.ToTable("TT_ApiSetting");
                });

            modelBuilder.Entity("DDAApi.HospModel.TT_OrderH_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Message");

                    b.Property<DateTime>("ModifiedDateTime");

                    b.Property<int>("OpKind");

                    b.Property<string>("OpName");

                    b.Property<string>("OrderNo");

                    b.Property<int>("Retried");

                    b.Property<int>("Status");

                    b.Property<string>("TTOrderId");

                    b.HasKey("Id");

                    b.ToTable("TT_OrderH_Log");
                });

            modelBuilder.Entity("DDAApi.HospModel.TT_OrderNoMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderNo");

                    b.Property<string>("PlatName");

                    b.Property<string>("PlatOrderNo");

                    b.Property<long>("TTId");

                    b.HasKey("Id");

                    b.ToTable("TT_OrderNoMapping");
                });

            modelBuilder.Entity("DDAApi.HospModel.TT_OrderProcess_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DDAOrderNo");

                    b.Property<string>("ErrorId");

                    b.Property<DateTime>("LogDateTime");

                    b.Property<string>("PlatformOrderNo");

                    b.Property<int>("Status");

                    b.Property<string>("StatusNotes");

                    b.Property<string>("TTOrderId");

                    b.HasKey("Id");

                    b.ToTable("TT_OrderProcess_Log");
                });
#pragma warning restore 612, 618
        }
    }
}
